"""
假设至少需要扔X次才能找到F的位置，则有下面的步骤。
1.在X层出扔下1号鸡蛋，如果碎了，则F在[1,X-1]之间，此时我们还可以用2号鸡蛋逐层的测试X-1次，
  刚好可以找到F所在的位置。若没有碎则转到第二步。
2.由于1号鸡蛋已经在X楼扔了一次，则只剩X-1次机会可以使用，为此要想找出F，
  最多可以测试到第X+X-1层处，所以继续将第一个鸡蛋在X+X-1层处扔下，如果碎了，
  则F必处于[X+1,2X-2]之间，刚好可以在剩下的X-2次机会中找到F，若没碎，则转到第三步。
3.现在处于第2X-1层，还剩X-2次机会，因此最多可以测试到第3X-3层处，因此可以在3X-3层处扔下鸡蛋，
  根据鸡蛋是否破碎，重复类似与第一步和第二步的操作。
………………
由上述操作可以看出，如果有一个鸡蛋在中途碎了的话，我们即可在此楼的下方找到F的位置，
因此若鸡蛋在中途一直未被摔碎的话，X步之后假设可以测试到第T层，则：
T=X+(X-1)+(X-2)+(X-3)+(X-4)+……+1+0=X(X+1)/2。
为了能够测试出N层楼中F的位置，因此最后我们能够测试到的楼层数T应该满足T>=N,因此可解得相应的X的值。
"""
class Solution:
    """
    @param n: An integer
    @return: The sum of a and b
    """

    def dropEggs(self, n):
        import math

        x = int(math.sqrt(n * 2))

        while x * (x + 1) / 2 < n:
            x += 1

        return x
